<div id="container-{{promptId}}">
    <form action="javascript:void(0);" onsubmit="odkLeaveField(this);">
        <div class="form-group">
            <label for="slider-{{promptId}}">{{> labelHint}}</label>
            <div class="input-container">{{! used to prevent swiping on sliders}}
                <input id="slider-{{promptId}}" class="form-control" name="{{name}}" value="{{value}}" tabindex="0"
                    {{#eachProperty inputAttributes}} {{property}}="{{value}}" {{/eachProperty}} {{#if disabled}}
                    style="background-color:lightgray;" disabled="true" {{/if}}>
                {{#if isSlider}}
                {{!-- {{#unless disabled}}
                <div class="value-box" id="value-{{promptId}}" style="width:{{boxWidth}}px">{{value}}</div>
                {{/unless}} --}}
                {{/if}}
                {{#if inputAttributes.showIDK}}
                <input type="checkbox" id="idk-{{promptId}}" name="{{name}}" value="{{value}}"
                    style="margin:0 8px; width:44px; height:34px;">
                <label for="idk-{{promptId}}" style="font-weight:normal; margin-top:4px; width:174px;">Not Available</label>
                {{/if}}
            </div>
        </div>
    </form>
</div>
<div class="alert alert-warning" role="alert" id="validation-message-{{promptId}}"></div>
<script>
    // Used to handle toggle of a 'Not Available' checkbox and automatically assign default value (-98) when checked
    function handleIDKCheckbox() {
        const dummyValue = -98
        // set default checkbox state
        if ("{{value}}" == dummyValue) {
            $("#idk-{{promptId}}").prop('checked', true);
            $("#slider-{{promptId}}").prop('disabled', true);
        }
        // handle checkbox click by setting input value to dummyValue or "" if checked or not
        $('#idk-{{promptId}}').click(function (e) {
            // prevent default change handler assigned by odk propagating checkbox value to data
            e.stopPropagation()
            // toggle checkbox state and set associated values
            let isChecked = $("#idk-{{promptId}}").prop("checked");
            const targetValue = isChecked ? dummyValue : ""
            $("#idk-{{promptId}}").prop("checked", isChecked);
            $("#idk-{{promptId}}").val(targetValue);
            $("#slider-{{promptId}}").val(targetValue);
            $("#slider-{{promptId}}").prop('disabled', isChecked);
            $("#slider-{{promptId}}").trigger('change')
        });
    }
    handleIDKCheckbox()

    // check validation status and messages from input el. Display in message div if exists
    function checkValidation() {
        var inputEl = document.getElementById('slider-{{promptId}}')
        var messageEl$ = $("#validation-message-{{promptId}}")
        const isValid = inputEl.checkValidity();
        if (!isValid) {
            const validationMsg = inputEl.validationMessage
            messageEl$.text(validationMsg)
            messageEl$.removeClass('hide')
        }
        else {
            messageEl$.addClass('hide')
        }
    }
    checkValidation()
</script>